[rank: 0] Global seed set to 1
/home/dkariyawasan/projects/digi-twin/trajdata/src/trajdata/dataset_specific/nusc/nusc_dataset.py:62: UserWarning: Beware, nusc_test has no annotations!
  warnings.warn("Beware, nusc_test has no annotations!")
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
registered_name: l5_bc
registered_name: l5_gan
registered_name: l5_bc_gc
registered_name: l5_spatial_planner
registered_name: l5_agent_predictor
registered_name: l5_vae
registered_name: l5_bc_ec
registered_name: l5_discrete_vae
registered_name: l5_tree_vae
registered_name: l5_transformer
registered_name: l5_transformer_gan
registered_name: l5_ebm
registered_name: l5_occupancy
registered_name: l5_diff
registered_name: eupeds_bc
registered_name: eupeds_vae
registered_name: orca_bc
registered_name: orca_diff
registered_name: trajdata_l5_bc
registered_name: trajdata_l5_vae
registered_name: trajdata_l5_spatial_planner
registered_name: trajdata_l5_agent_predictor
registered_name: trajdata_l5_diff
registered_name: trajdata_nuplan_bc
registered_name: trajdata_nuplan_spatial_planner
registered_name: trajdata_nuplan_agent_predictor
registered_name: trajdata_nuplan_diff
registered_name: trajdata_nuplan_ped_diff
registered_name: trajdata_nuplan_all_diff
registered_name: trajdata_nuplan_scene_diff
registered_name: trajdata_drivesim_diff
registered_name: 
args.config_name trajdata_nusc_diff
default_config {
    "registered_name": "trajdata_nusc_diff",
    "train": {
        "logging": {
            "terminal_output_to_txt": true,
            "log_tb": false,
            "log_wandb": true,
            "wandb_project_name": "tbsim",
            "log_every_n_steps": 10,
            "flush_every_n_steps": 100
        },
        "save": {
            "enabled": true,
            "every_n_steps": 1000,
            "best_k": 10,
            "save_best_rollout": false,
            "save_best_validation": true
        },
        "rollout": {
            "save_video": true,
            "enabled": false,
            "every_n_steps": 4000,
            "warm_start_n_steps": 0
        },
        "training": {
            "batch_size": 64,
            "num_steps": 100000,
            "num_data_workers": 8
        },
        "validation": {
            "enabled": false,
            "batch_size": 16,
            "num_data_workers": 6,
            "every_n_steps": 4000,
            "num_steps_per_epoch": 5
        },
        "parallel_strategy": "ddp_spawn",
        "on_ngc": false,
        "datamodule_class": "PassUnifiedDataModule",
        "trajdata_cache_location": "~/.unified_data_cache",
        "trajdata_source_train": [
            "nusc_trainval-train",
            "nusc_trainval-train_val"
        ],
        "trajdata_source_valid": [
            "nusc_trainval-val"
        ],
        "trajdata_data_dirs": {
            "nusc_trainval": "../behavior-generation-dataset/nuscenes",
            "nusc_test": "../behavior-generation-dataset/nuscenes",
            "nusc_mini": "../behavior-generation-dataset/nuscenes"
        },
        "trajdata_rebuild_cache": false,
        "training_vec_map_params": {
            "S_seg": 15,
            "S_point": 80,
            "map_max_dist": 80,
            "max_heading_error": 0.7853981633974483,
            "ahead_threshold": -40,
            "dist_weight": 1.0,
            "heading_weight": 0.1
        }
    },
    "env": {
        "name": "trajdata",
        "data_generation_params": {
            "trajdata_centric": "agent",
            "trajdata_only_types": [
                "vehicle"
            ],
            "trajdata_predict_types": [
                "vehicle"
            ],
            "trajdata_scene_desc_contains": null,
            "trajdata_incl_map": true,
            "trajdata_max_agents_distance": Infinity,
            "trajdata_standardize_data": true,
            "other_agents_num": null
        },
        "rasterizer": {
            "include_hist": true,
            "num_sem_layers": 3,
            "drivable_layers": null,
            "rgb_idx_groups": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ]
            ],
            "raster_size": 224,
            "pixel_size": 0.5,
            "ego_center": [
                -0.5,
                0.0
            ],
            "no_map_fill_value": -1.0
        }
    },
    "algo": {
        "name": "diffuser",
        "eval_class": "Diffuser",
        "coordinate": "agent_centric",
        "scene_agent_max_neighbor_dist": 30,
        "map_encoder_model_arch": "resnet18",
        "diffuser_model_arch": "TemporalMapUnet",
        "disable_control_on_stationary": "current_speed",
        "moving_speed_th": 0.5,
        "rasterized_history": true,
        "rasterized_map": true,
        "use_map_feat_global": true,
        "use_map_feat_grid": false,
        "base_dim": 32,
        "horizon": 52,
        "n_diffusion_steps": 100,
        "action_weight": 1,
        "diffusor_loss_weights": null,
        "loss_discount": 1,
        "predict_epsilon": false,
        "dim_mults": [
            2,
            4,
            8
        ],
        "clip_denoised": false,
        "loss_type": "l2",
        "use_ema": true,
        "ema_step": 1,
        "ema_decay": 0.995,
        "ema_start_step": 4000,
        "diffuser_building_block": "concat",
        "action_loss_only": false,
        "diffuser_input_mode": "state_and_action",
        "use_reconstructed_state": false,
        "conditioning_drop_map_p": 0.0,
        "conditioning_drop_neighbor_p": 0.0,
        "conditioning_drop_fill": 0.5,
        "cond_feat_dim": 256,
        "curr_state_feat_dim": 64,
        "map_feature_dim": 256,
        "map_grid_feature_dim": 32,
        "history_feature_dim": 128,
        "history_num_frames": 30,
        "history_num_frames_ego": 30,
        "history_num_frames_agents": 30,
        "future_num_frames": 52,
        "step_time": 0.1,
        "render_ego_history": false,
        "decoder": {
            "layer_dims": [],
            "state_as_input": true
        },
        "dynamics": {
            "type": "Unicycle",
            "max_steer": 0.5,
            "max_yawvel": 6.283185307179586,
            "acce_bound": [
                -10,
                8
            ],
            "ddh_bound": [
                -6.283185307179586,
                6.283185307179586
            ],
            "max_speed": 40.0
        },
        "loss_weights": {
            "diffusion_loss": 1.0
        },
        "optim_params": {
            "policy": {
                "learning_rate": {
                    "initial": 0.0001,
                    "decay_factor": 0.1,
                    "epoch_schedule": []
                }
            }
        },
        "diffuser": {
            "num_eval_samples": 10
        },
        "nusc_norm_info": {
            "diffuser": [
                [
                    2.135494,
                    0.003704,
                    0.970226,
                    0.000573,
                    -0.002965,
                    0.000309
                ],
                [
                    5.5444,
                    0.524067,
                    2.206522,
                    0.049049,
                    0.729327,
                    0.023765
                ]
            ],
            "agent_hist": [
                [
                    -1.198923,
                    0.000128,
                    0.953161,
                    4.698113,
                    2.051664
                ],
                [
                    3.180241,
                    0.159182,
                    2.129779,
                    2.116855,
                    0.388149
                ]
            ],
            "neighbor_hist": [
                [
                    -0.237441,
                    1.118636,
                    0.489575,
                    0.868664,
                    0.222984
                ],
                [
                    7.587311,
                    7.444489,
                    1.680952,
                    2.578202,
                    0.832563
                ]
            ]
        },
        "nuplan_norm_info": {
            "diffuser": [
                [
                    4.796822,
                    0.005868,
                    2.192235,
                    0.001452,
                    0.031407,
                    0.000549
                ],
                [
                    9.0485,
                    0.502242,
                    3.416214,
                    0.081688,
                    5.372146,
                    0.074966
                ]
            ],
            "agent_hist": [
                [
                    -2.740177,
                    0.002556,
                    2.155241,
                    3.783593,
                    1.812939
                ],
                [
                    5.212748,
                    0.139311,
                    3.422815,
                    1.406989,
                    0.298052
                ]
            ],
            "neighbor_hist": [
                [
                    -0.405011,
                    1.321956,
                    0.663815,
                    0.581748,
                    0.162458
                ],
                [
                    8.044137,
                    6.039638,
                    2.541506,
                    1.919543,
                    0.685904
                ]
            ]
        }
    },
    "eval": {
        "name": null,
        "env": "nusc",
        "dataset_path": null,
        "eval_class": "",
        "seed": 0,
        "num_scenes_per_batch": 1,
        "num_scenes_to_evaluate": 1,
        "num_episode_repeats": 1,
        "start_frame_index_each_episode": null,
        "seed_each_episode": null,
        "ego_only": false,
        "agent_eval_class": null,
        "ckpt_root_dir": "checkpoints/",
        "experience_hdf5_path": null,
        "results_dir": "results/",
        "ckpt": {
            "policy": {
                "ngc_job_id": null,
                "ckpt_dir": null,
                "ckpt_key": null
            },
            "planner": {
                "ngc_job_id": null,
                "ckpt_dir": null,
                "ckpt_key": null
            },
            "predictor": {
                "ngc_job_id": null,
                "ckpt_dir": null,
                "ckpt_key": null
            },
            "cvae_metric": {
                "ngc_job_id": null,
                "ckpt_dir": null,
                "ckpt_key": null
            },
            "occupancy_metric": {
                "ngc_job_id": null,
                "ckpt_dir": null,
                "ckpt_key": null
            }
        },
        "policy": {
            "mask_drivable": true,
            "num_plan_samples": 50,
            "num_action_samples": 2,
            "pos_to_yaw": true,
            "yaw_correction_speed": 1.0,
            "diversification_clearance": null,
            "sample": false,
            "cost_weights": {
                "collision_weight": 10.0,
                "lane_weight": 1.0,
                "likelihood_weight": 0.0,
                "progress_weight": 0.0
            },
            "use_ema": false,
            "class_free_guide_w": 0.0,
            "guide_as_filter_only": false,
            "guide_clean": "video_diff"
        },
        "goal_conditional": false,
        "perturb_output_trajectory": false,
        "perturb_opt_params": {
            "optimizer": "adam",
            "grad_steps": 30,
            "perturb_th": 100.0,
            "optimizer_params": {
                "lr": 0.001
            }
        },
        "filtration": false,
        "num_filtration_samples": 5,
        "guidance_optimization_params": {
            "optimizer": "adam",
            "lr": 0.3,
            "grad_steps": 1,
            "perturb_th": null
        },
        "denoising_params": {
            "stride": 1,
            "perturb_output_trajectory": false
        },
        "metrics": {
            "compute_analytical_metrics": true,
            "compute_learned_metrics": false
        },
        "perturb": {
            "enabled": false,
            "OU": {
                "theta": 0.8,
                "sigma": [
                    0.0,
                    0.1,
                    0.2,
                    0.5,
                    1.0,
                    2.0,
                    4.0
                ],
                "scale": [
                    1.0,
                    1.0,
                    0.2
                ]
            }
        },
        "rolling_perturb": {
            "enabled": false,
            "OU": {
                "theta": 0.8,
                "sigma": 0.5,
                "scale": [
                    1.0,
                    1.0,
                    0.2
                ]
            }
        },
        "occupancy": {
            "rolling": true,
            "rolling_horizon": [
                5,
                10,
                20
            ]
        },
        "cvae": {
            "rolling": true,
            "rolling_horizon": [
                5,
                10,
                20
            ]
        },
        "nusc": {
            "trajdata_source_test": [
                "nusc_trainval-val"
            ],
            "trajdata_data_dirs": {
                "nusc_trainval": "../behavior-generation-dataset/nuscenes"
            },
            "future_sec": 5.2,
            "history_sec": 3.0,
            "eval_scenes": [
                30
            ],
            "n_step_action": 5,
            "num_simulation_steps": 200,
            "skip_first_n": 0
        },
        "l5kit": {
            "eval_scenes": [
                9058,
                5232,
                14153,
                8173,
                10314,
                7027,
                9812,
                1090,
                9453,
                978,
                10263,
                874,
                5563,
                9613,
                261,
                2826,
                2175,
                9977,
                6423,
                1069,
                1836,
                8198,
                5034,
                6016,
                2525,
                927,
                3634,
                11806,
                4911,
                6192,
                11641,
                461,
                142,
                15493,
                4919,
                8494,
                14572,
                2402,
                308,
                1952,
                13287,
                15614,
                6529,
                12,
                11543,
                4558,
                489,
                6876,
                15279,
                6095,
                5877,
                8928,
                10599,
                16150,
                11296,
                9382,
                13352,
                1794,
                16122,
                12429,
                15321,
                8614,
                12447,
                4502,
                13235,
                2919,
                15893,
                12960,
                7043,
                9278,
                952,
                4699,
                768,
                13146,
                8827,
                16212,
                10777,
                15885,
                11319,
                9417,
                14092,
                14873,
                6740,
                11847,
                15331,
                15639,
                11361,
                14784,
                13448,
                10124,
                4872,
                3567,
                5543,
                2214,
                7624,
                10193,
                7297,
                1308,
                3951,
                14001
            ],
            "n_step_action": 5,
            "num_simulation_steps": 200,
            "skip_first_n": 1,
            "skimp_rollout": false
        },
        "adjustment": {
            "random_init_plan": false,
            "remove_existing_neighbors": false,
            "initial_num_neighbors": 4,
            "num_frame_per_new_agent": 20
        },
        "trajdata": {
            "trajdata_cache_location": "~/.unified_data_cache",
            "trajdata_rebuild_cache": false,
            "trajdata_source_test": [
                "nusc_trainval-val"
            ],
            "trajdata_data_dirs": {
                "nusc_trainval": "../behavior-generation-dataset/nuscenes"
            },
            "num_scenes_to_evaluate": 10,
            "eval_scenes": [
                0,
                10,
                20,
                30,
                40,
                50,
                60,
                70,
                80,
                90
            ],
            "n_step_action": 5,
            "num_simulation_steps": 100,
            "skip_first_n": 0
        }
    },
    "name": "test",
    "root_dir": "diffuser_trained_models/",
    "seed": 1,
    "devices": {
        "num_gpus": 1
    }
}

============= New Training Run with Config =============
data_cfg.trajdata_predict_types ['vehicle']
{'cache_location': '~/.unified_data_cache', 'desired_data': ['nusc_trainval-train', 'nusc_trainval-train_val'], 'desired_dt': 0.1, 'future_sec': (5.2, 5.2), 'history_sec': (3.0, 3.0), 'data_dirs': {'nusc_trainval': '../behavior-generation-dataset/nuscenes', 'nusc_test': '../behavior-generation-dataset/nuscenes', 'nusc_mini': '../behavior-generation-dataset/nuscenes'}, 'only_types': [<AgentType.VEHICLE: 1>], 'only_predict': [<AgentType.VEHICLE: 1>], 'agent_interaction_distances': defaultdict(<function PassUnifiedDataModule.setup.<locals>.<lambda> at 0x1536a875ee50>, {}), 'incl_raster_map': True, 'raster_map_params': {'px_per_m': 2, 'map_size_px': 224, 'return_rgb': False, 'offset_frac_xy': (-0.5, 0.0), 'no_map_fill_value': -1.0}, 'incl_vector_map': True, 'centric': 'agent', 'scene_description_contains': None, 'standardize_data': True, 'verbose': True, 'max_agent_num': None, 'num_workers': 32, 'rebuild_cache': False, 'rebuild_maps': False, 'extras': {'closest_lane_point': <function get_closest_lane_point_wrapper.<locals>.get_closest_lane_point at 0x1536a8765160>, 'full_fut_traj': <function get_full_fut_traj at 0x1536ac1571f0>, 'full_fut_valid': <function get_full_fut_valid at 0x1536ac157280>}}
Loading data for matched scene tags: ['nusc_trainval-boston-train', 'nusc_trainval-singapore-train', 'nusc_trainval-train_val-boston', 'nusc_trainval-train_val-singapore']
Calculating Agent Data (Serially):   0%|          | 0/700 [00:00<?, ?it/s]Calculating Agent Data (Serially): 100%|██████████| 700/700 [00:00<00:00, 60714.11it/s]
700 scenes in the scene index.
Creating Agent Data Index (32 CPUs):   0%|          | 0/700 [00:00<?, ?it/s]Creating Agent Data Index (32 CPUs): 100%|██████████| 700/700 [00:00<00:00, 9632.37it/s]
Structuring Agent Data Index:   0%|          | 0/700 [00:00<?, ?it/s]Structuring Agent Data Index: 100%|██████████| 700/700 [00:00<00:00, 30937.96it/s]
Loading data for matched scene tags: ['nusc_trainval-boston-val', 'nusc_trainval-singapore-val']
Calculating Agent Data (Serially):   0%|          | 0/150 [00:00<?, ?it/s]Calculating Agent Data (Serially): 100%|██████████| 150/150 [00:00<00:00, 58362.30it/s]
150 scenes in the scene index.
Creating Agent Data Index (32 CPUs):   0%|          | 0/150 [00:00<?, ?it/s]Creating Agent Data Index (32 CPUs): 100%|██████████| 150/150 [00:00<00:00, 8042.87it/s]
Structuring Agent Data Index:   0%|          | 0/150 [00:00<?, ?it/s]Structuring Agent Data Index: 100%|██████████| 150/150 [00:00<00:00, 29645.91it/s]
Checkpoint path: diffuser_trained_models/test/run59/checkpoints/iter30000.ckpt
Config path: diffuser_trained_models/test/run59/config.json
registered_name: 
registered_name trajdata_nusc_diff
disable_control_on_stationary current_speed
self.add_coeffs [ 2.135494e+00  3.704000e-03  9.702260e-01  5.730000e-04 -2.965000e-03
  3.090000e-04]
self.div_coeffs [5.5444   0.524067 2.206522 0.049049 0.729327 0.023765]
[ models/temporal ] Channel dimensions: [(6, 64), (64, 128), (128, 256)]
DIFFUSER: using EMA... val and get_action will use ema model
Traceback (most recent call last):
  File "/home/dkariyawasan/projects/digi-twin/CTG/scripts/train.py", line 361, in <module>
    main(default_config, auto_remove_exp_dir=args.remove_exp_dir, debug=args.debug, load_checkpoint=load_checkpoint)
  File "/home/dkariyawasan/projects/digi-twin/CTG/scripts/train.py", line 102, in main
    model, exp_config = composer.get_policy(policy_wrapper=False)
  File "/home/dkariyawasan/projects/digi-twin/CTG/tbsim/evaluation/policy_composers.py", line 770, in get_policy
    policy = DiffuserTrafficModel.load_from_checkpoint(
  File "/data/gpfs/projects/punim2030/anaconda/envs/bg3.9/lib/python3.9/site-packages/pytorch_lightning/core/saving.py", line 137, in load_from_checkpoint
    return _load_from_checkpoint(
  File "/data/gpfs/projects/punim2030/anaconda/envs/bg3.9/lib/python3.9/site-packages/pytorch_lightning/core/saving.py", line 180, in _load_from_checkpoint
    return _load_state(cls, checkpoint, strict=strict, **kwargs)
  File "/data/gpfs/projects/punim2030/anaconda/envs/bg3.9/lib/python3.9/site-packages/pytorch_lightning/core/saving.py", line 238, in _load_state
    keys = obj.load_state_dict(checkpoint["state_dict"], strict=strict)
  File "/data/gpfs/projects/punim2030/anaconda/envs/bg3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1671, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for DiffuserTrafficModel:
	size mismatch for nets.policy.map_encoder.encoder_heads.map_model.conv1.weight: copying a param with shape torch.Size([64, 3, 7, 7]) from checkpoint, the shape in current model is torch.Size([64, 34, 7, 7]).
	size mismatch for ema_policy.map_encoder.encoder_heads.map_model.conv1.weight: copying a param with shape torch.Size([64, 3, 7, 7]) from checkpoint, the shape in current model is torch.Size([64, 34, 7, 7]).
Job ID           : 1043475
Cluster          : spartan
User/Project     : dkariyawasan/punim2030
Nodes            : 1
Wall-clock time  : 00:00:30 / 2-00:00:00

Displaying overall resources usage from 2024-11-04 06:28:00 to 2024-11-04 06:28:30:

NODE            CPU#        TOT%   ( USR   / SYS   / WIO   / IDLE  ) 

spartan-gpgpu148 : 
                CPU# 1    : 6.5    (   4.4 /   2.1 /   0.0 /  93.5 ) 
                CPU# 2    : 15.9   (  14.4 /   1.6 /   0.0 /  84.1 ) 
                CPU# 3    : 1.1    (   0.3 /   0.8 /   0.0 /  98.9 ) 
                CPU# 4    : 1.2    (   0.3 /   0.9 /   0.0 /  98.8 ) 
                CPU# 5    : 1.2    (   0.3 /   0.9 /   0.0 /  98.8 ) 
                CPU# 6    : 2.7    (   0.4 /   2.3 /   0.0 /  97.3 ) 
                CPU# 7    : 2.2    (   0.2 /   2.0 /   0.0 /  97.8 ) 
                CPU# 8    : 8.7    (   6.3 /   2.3 /   0.0 /  91.3 ) 
                CPU# 9    : 2.5    (   0.7 /   1.8 /   0.0 /  97.5 ) 
                CPU# 10   : 1.3    (   0.5 /   0.8 /   0.0 /  98.7 ) 
                CPU# 11   : 1.9    (   1.4 /   0.5 /   0.0 /  98.1 ) 
                CPU# 12   : 4.3    (   3.3 /   0.9 /   0.0 /  95.7 ) 
                CPU# 13   : 3.2    (   1.8 /   1.4 /   0.0 /  96.8 ) 
                CPU# 14   : 1.4    (   0.5 /   0.8 /   0.0 /  98.6 ) 
                CPU# 15   : 2.6    (   1.2 /   1.4 /   0.0 /  97.4 ) 
                CPU# 16   : 0.9    (   0.3 /   0.6 /   0.0 /  99.1 ) 

                            UTIL%   MEM-USG-AVG  MEM-USG-MAX  TOT-MEM   
                GPU# 1    : 0.0       882.0M       882.0M     81920.0M 


Allocated CPUs            : 16   
  CPUs with usage <25%    : 16   
  CPUs with usage <50%    : 0    
  CPUs with usage >50%    : 0    


Allocated GPUs            : 1    
  GPUs with usage <25%    : 1    
  GPUs with usage <50%    : 0    
  GPUs with usage >50%    : 0    

Memory used (RAM)         : 0.4%  [688MB of 157287MB]

--------------------------------------------

